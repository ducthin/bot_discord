const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const { initGuildMusicData, playMusic, createMusicConnection } = require('../utils/musicUtils');
const { searchYoutube, getVideoInfo, isValidYouTubeUrl, isPlaylistUrl, getPlaylistVideos } = require('../utils/youtubeUtils');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('play')
        .setDescription('Ph√°t nh·∫°c t·ª´ YouTube')
        .addStringOption(option =>
            option.setName('query')
                .setDescription('T√™n b√†i h√°t ho·∫∑c URL YouTube')
                .setRequired(true)
        ),

    async execute(interaction) {
        const { guild, member, channel } = interaction;
        
        if (!member.voice.channel) {
            return interaction.reply('‚ùå B·∫°n c·∫ßn v√†o voice channel tr∆∞·ªõc!');
        }

        await interaction.deferReply();

        const guildData = initGuildMusicData(guild.id);
        guildData.textChannel = channel;

        const query = interaction.options.getString('query');
        let songInfo;

        // Ki·ªÉm tra xem c√≥ ph·∫£i YouTube URL hay kh√¥ng
        if (isValidYouTubeUrl(query)) {
            // Ki·ªÉm tra c√≥ ph·∫£i playlist kh√¥ng
            if (isPlaylistUrl(query)) {
                return interaction.editReply('üéµ Ph√°t hi·ªán playlist! S·ª≠ d·ª•ng l·ªánh `/playlist` ƒë·ªÉ ph√°t to√†n b·ªô playlist, ho·∫∑c copy URL video c·ª• th·ªÉ ƒë·ªÉ ph√°t 1 b√†i.');
            }
            
            songInfo = await getVideoInfo(query);
            if (!songInfo) {
                return interaction.editReply('‚ùå Kh√¥ng th·ªÉ l·∫•y th√¥ng tin video!');
            }
        } else {
            songInfo = await searchYoutube(query);
            if (!songInfo) {
                return interaction.editReply('‚ùå Kh√¥ng t√¨m th·∫•y b√†i h√°t n√†o!');
            }
        }

        if (!songInfo.requester) {
            songInfo.requester = member.user.username;
        }

        console.log('Song info:', songInfo); // Debug log

        // Th√™m th√¥ng tin requester
        songInfo.requester = member.user.id;

        // K·∫øt n·ªëi voice channel n·∫øu ch∆∞a k·∫øt n·ªëi
        createMusicConnection(member, guildData);

        guildData.queue.push(songInfo);

        if (!guildData.isPlaying) {
            playMusic(guildData);
        }

        const embed = new EmbedBuilder()
            .setColor('#0099ff')
            .setTitle('‚úÖ ƒê√£ th√™m v√†o queue')
            .setDescription(`**${songInfo.title}**`)
            .addFields(
                { name: 'V·ªã tr√≠ trong queue', value: `${guildData.queue.length}`, inline: true },
                { name: 'Th·ªùi l∆∞·ª£ng', value: songInfo.duration, inline: true },
                { name: 'Ng∆∞·ªùi y√™u c·∫ßu', value: member.user.username, inline: true }
            )
            .setThumbnail(songInfo.thumbnail);

        interaction.followUp({ embeds: [embed] });
    }
};
